// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Externaldatav1Operator Logical operators.
//
// swagger:model externaldatav1Operator
type Externaldatav1Operator string

func NewExternaldatav1Operator(value Externaldatav1Operator) *Externaldatav1Operator {
	return &value
}

// Pointer returns a pointer to a freshly-allocated Externaldatav1Operator.
func (m Externaldatav1Operator) Pointer() *Externaldatav1Operator {
	return &m
}

const (

	// Externaldatav1OperatorOPERATOREQUAL captures enum value "OPERATOR_EQUAL"
	Externaldatav1OperatorOPERATOREQUAL Externaldatav1Operator = "OPERATOR_EQUAL"

	// Externaldatav1OperatorOPERATORMORETHAN captures enum value "OPERATOR_MORE_THAN"
	Externaldatav1OperatorOPERATORMORETHAN Externaldatav1Operator = "OPERATOR_MORE_THAN"

	// Externaldatav1OperatorOPERATORMORETHANOREQUAL captures enum value "OPERATOR_MORE_THAN_OR_EQUAL"
	Externaldatav1OperatorOPERATORMORETHANOREQUAL Externaldatav1Operator = "OPERATOR_MORE_THAN_OR_EQUAL"

	// Externaldatav1OperatorOPERATORLESSTHAN captures enum value "OPERATOR_LESS_THAN"
	Externaldatav1OperatorOPERATORLESSTHAN Externaldatav1Operator = "OPERATOR_LESS_THAN"

	// Externaldatav1OperatorOPERATORLESSTHANOREQUAL captures enum value "OPERATOR_LESS_THAN_OR_EQUAL"
	Externaldatav1OperatorOPERATORLESSTHANOREQUAL Externaldatav1Operator = "OPERATOR_LESS_THAN_OR_EQUAL"

	// Externaldatav1OperatorOPERATORCONTAINS captures enum value "OPERATOR_CONTAINS"
	Externaldatav1OperatorOPERATORCONTAINS Externaldatav1Operator = "OPERATOR_CONTAINS"

	// Externaldatav1OperatorOPERATORNOTEQUAL captures enum value "OPERATOR_NOT_EQUAL"
	Externaldatav1OperatorOPERATORNOTEQUAL Externaldatav1Operator = "OPERATOR_NOT_EQUAL"

	// Externaldatav1OperatorOPERATORIN captures enum value "OPERATOR_IN"
	Externaldatav1OperatorOPERATORIN Externaldatav1Operator = "OPERATOR_IN"

	// Externaldatav1OperatorOPERATORNOTIN captures enum value "OPERATOR_NOT_IN"
	Externaldatav1OperatorOPERATORNOTIN Externaldatav1Operator = "OPERATOR_NOT_IN"

	// Externaldatav1OperatorOPERATORCONTAINSONE captures enum value "OPERATOR_CONTAINS_ONE"
	Externaldatav1OperatorOPERATORCONTAINSONE Externaldatav1Operator = "OPERATOR_CONTAINS_ONE"

	// Externaldatav1OperatorOPERATORCONTAINSALL captures enum value "OPERATOR_CONTAINS_ALL"
	Externaldatav1OperatorOPERATORCONTAINSALL Externaldatav1Operator = "OPERATOR_CONTAINS_ALL"
)

// for schema
var externaldatav1OperatorEnum []interface{}

func init() {
	var res []Externaldatav1Operator
	if err := json.Unmarshal([]byte(`["OPERATOR_EQUAL","OPERATOR_MORE_THAN","OPERATOR_MORE_THAN_OR_EQUAL","OPERATOR_LESS_THAN","OPERATOR_LESS_THAN_OR_EQUAL","OPERATOR_CONTAINS","OPERATOR_NOT_EQUAL","OPERATOR_IN","OPERATOR_NOT_IN","OPERATOR_CONTAINS_ONE","OPERATOR_CONTAINS_ALL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		externaldatav1OperatorEnum = append(externaldatav1OperatorEnum, v)
	}
}

func (m Externaldatav1Operator) validateExternaldatav1OperatorEnum(path, location string, value Externaldatav1Operator) error {
	if err := validate.EnumCase(path, location, value, externaldatav1OperatorEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this externaldatav1 operator
func (m Externaldatav1Operator) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateExternaldatav1OperatorEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this externaldatav1 operator based on context it is used
func (m Externaldatav1Operator) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
