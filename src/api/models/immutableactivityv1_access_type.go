// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Immutableactivityv1AccessType immutableactivityv1 access type
//
// swagger:model immutableactivityv1AccessType
type Immutableactivityv1AccessType string

func NewImmutableactivityv1AccessType(value Immutableactivityv1AccessType) *Immutableactivityv1AccessType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated Immutableactivityv1AccessType.
func (m Immutableactivityv1AccessType) Pointer() *Immutableactivityv1AccessType {
	return &m
}

const (

	// Immutableactivityv1AccessTypeACCESSTYPEWEB captures enum value "ACCESS_TYPE_WEB"
	Immutableactivityv1AccessTypeACCESSTYPEWEB Immutableactivityv1AccessType = "ACCESS_TYPE_WEB"

	// Immutableactivityv1AccessTypeACCESSTYPEAPI captures enum value "ACCESS_TYPE_API"
	Immutableactivityv1AccessTypeACCESSTYPEAPI Immutableactivityv1AccessType = "ACCESS_TYPE_API"

	// Immutableactivityv1AccessTypeACCESSTYPEALL captures enum value "ACCESS_TYPE_ALL"
	Immutableactivityv1AccessTypeACCESSTYPEALL Immutableactivityv1AccessType = "ACCESS_TYPE_ALL"
)

// for schema
var immutableactivityv1AccessTypeEnum []interface{}

func init() {
	var res []Immutableactivityv1AccessType
	if err := json.Unmarshal([]byte(`["ACCESS_TYPE_WEB","ACCESS_TYPE_API","ACCESS_TYPE_ALL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		immutableactivityv1AccessTypeEnum = append(immutableactivityv1AccessTypeEnum, v)
	}
}

func (m Immutableactivityv1AccessType) validateImmutableactivityv1AccessTypeEnum(path, location string, value Immutableactivityv1AccessType) error {
	if err := validate.EnumCase(path, location, value, immutableactivityv1AccessTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this immutableactivityv1 access type
func (m Immutableactivityv1AccessType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateImmutableactivityv1AccessTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this immutableactivityv1 access type based on context it is used
func (m Immutableactivityv1AccessType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
