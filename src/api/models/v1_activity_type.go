// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1ActivityType Type of Activity, such as Add User, or Sign Transaction.
//
// swagger:model v1ActivityType
type V1ActivityType string

func NewV1ActivityType(value V1ActivityType) *V1ActivityType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated V1ActivityType.
func (m V1ActivityType) Pointer() *V1ActivityType {
	return &m
}

const (

	// V1ActivityTypeACTIVITYTYPECREATEAPIKEYS captures enum value "ACTIVITY_TYPE_CREATE_API_KEYS"
	V1ActivityTypeACTIVITYTYPECREATEAPIKEYS V1ActivityType = "ACTIVITY_TYPE_CREATE_API_KEYS"

	// V1ActivityTypeACTIVITYTYPECREATEUSERS captures enum value "ACTIVITY_TYPE_CREATE_USERS"
	V1ActivityTypeACTIVITYTYPECREATEUSERS V1ActivityType = "ACTIVITY_TYPE_CREATE_USERS"

	// V1ActivityTypeACTIVITYTYPECREATEPRIVATEKEYS captures enum value "ACTIVITY_TYPE_CREATE_PRIVATE_KEYS"
	V1ActivityTypeACTIVITYTYPECREATEPRIVATEKEYS V1ActivityType = "ACTIVITY_TYPE_CREATE_PRIVATE_KEYS"

	// V1ActivityTypeACTIVITYTYPESIGNRAWPAYLOAD captures enum value "ACTIVITY_TYPE_SIGN_RAW_PAYLOAD"
	V1ActivityTypeACTIVITYTYPESIGNRAWPAYLOAD V1ActivityType = "ACTIVITY_TYPE_SIGN_RAW_PAYLOAD"

	// V1ActivityTypeACTIVITYTYPECREATEINVITATIONS captures enum value "ACTIVITY_TYPE_CREATE_INVITATIONS"
	V1ActivityTypeACTIVITYTYPECREATEINVITATIONS V1ActivityType = "ACTIVITY_TYPE_CREATE_INVITATIONS"

	// V1ActivityTypeACTIVITYTYPEACCEPTINVITATION captures enum value "ACTIVITY_TYPE_ACCEPT_INVITATION"
	V1ActivityTypeACTIVITYTYPEACCEPTINVITATION V1ActivityType = "ACTIVITY_TYPE_ACCEPT_INVITATION"

	// V1ActivityTypeACTIVITYTYPECREATEPOLICY captures enum value "ACTIVITY_TYPE_CREATE_POLICY"
	V1ActivityTypeACTIVITYTYPECREATEPOLICY V1ActivityType = "ACTIVITY_TYPE_CREATE_POLICY"

	// V1ActivityTypeACTIVITYTYPEDISABLEPRIVATEKEY captures enum value "ACTIVITY_TYPE_DISABLE_PRIVATE_KEY"
	V1ActivityTypeACTIVITYTYPEDISABLEPRIVATEKEY V1ActivityType = "ACTIVITY_TYPE_DISABLE_PRIVATE_KEY"

	// V1ActivityTypeACTIVITYTYPEDELETEUSERS captures enum value "ACTIVITY_TYPE_DELETE_USERS"
	V1ActivityTypeACTIVITYTYPEDELETEUSERS V1ActivityType = "ACTIVITY_TYPE_DELETE_USERS"

	// V1ActivityTypeACTIVITYTYPEDELETEAPIKEYS captures enum value "ACTIVITY_TYPE_DELETE_API_KEYS"
	V1ActivityTypeACTIVITYTYPEDELETEAPIKEYS V1ActivityType = "ACTIVITY_TYPE_DELETE_API_KEYS"

	// V1ActivityTypeACTIVITYTYPEDELETEINVITATION captures enum value "ACTIVITY_TYPE_DELETE_INVITATION"
	V1ActivityTypeACTIVITYTYPEDELETEINVITATION V1ActivityType = "ACTIVITY_TYPE_DELETE_INVITATION"

	// V1ActivityTypeACTIVITYTYPEDELETEORGANIZATION captures enum value "ACTIVITY_TYPE_DELETE_ORGANIZATION"
	V1ActivityTypeACTIVITYTYPEDELETEORGANIZATION V1ActivityType = "ACTIVITY_TYPE_DELETE_ORGANIZATION"

	// V1ActivityTypeACTIVITYTYPEDELETEPOLICY captures enum value "ACTIVITY_TYPE_DELETE_POLICY"
	V1ActivityTypeACTIVITYTYPEDELETEPOLICY V1ActivityType = "ACTIVITY_TYPE_DELETE_POLICY"

	// V1ActivityTypeACTIVITYTYPECREATEUSERTAG captures enum value "ACTIVITY_TYPE_CREATE_USER_TAG"
	V1ActivityTypeACTIVITYTYPECREATEUSERTAG V1ActivityType = "ACTIVITY_TYPE_CREATE_USER_TAG"

	// V1ActivityTypeACTIVITYTYPEDELETEUSERTAGS captures enum value "ACTIVITY_TYPE_DELETE_USER_TAGS"
	V1ActivityTypeACTIVITYTYPEDELETEUSERTAGS V1ActivityType = "ACTIVITY_TYPE_DELETE_USER_TAGS"

	// V1ActivityTypeACTIVITYTYPECREATEORGANIZATION captures enum value "ACTIVITY_TYPE_CREATE_ORGANIZATION"
	V1ActivityTypeACTIVITYTYPECREATEORGANIZATION V1ActivityType = "ACTIVITY_TYPE_CREATE_ORGANIZATION"

	// V1ActivityTypeACTIVITYTYPESIGNTRANSACTION captures enum value "ACTIVITY_TYPE_SIGN_TRANSACTION"
	V1ActivityTypeACTIVITYTYPESIGNTRANSACTION V1ActivityType = "ACTIVITY_TYPE_SIGN_TRANSACTION"

	// V1ActivityTypeACTIVITYTYPEAPPROVEACTIVITY captures enum value "ACTIVITY_TYPE_APPROVE_ACTIVITY"
	V1ActivityTypeACTIVITYTYPEAPPROVEACTIVITY V1ActivityType = "ACTIVITY_TYPE_APPROVE_ACTIVITY"

	// V1ActivityTypeACTIVITYTYPEREJECTACTIVITY captures enum value "ACTIVITY_TYPE_REJECT_ACTIVITY"
	V1ActivityTypeACTIVITYTYPEREJECTACTIVITY V1ActivityType = "ACTIVITY_TYPE_REJECT_ACTIVITY"

	// V1ActivityTypeACTIVITYTYPEDELETEAUTHENTICATORS captures enum value "ACTIVITY_TYPE_DELETE_AUTHENTICATORS"
	V1ActivityTypeACTIVITYTYPEDELETEAUTHENTICATORS V1ActivityType = "ACTIVITY_TYPE_DELETE_AUTHENTICATORS"

	// V1ActivityTypeACTIVITYTYPECREATEAUTHENTICATORS captures enum value "ACTIVITY_TYPE_CREATE_AUTHENTICATORS"
	V1ActivityTypeACTIVITYTYPECREATEAUTHENTICATORS V1ActivityType = "ACTIVITY_TYPE_CREATE_AUTHENTICATORS"

	// V1ActivityTypeACTIVITYTYPECREATEPRIVATEKEYTAG captures enum value "ACTIVITY_TYPE_CREATE_PRIVATE_KEY_TAG"
	V1ActivityTypeACTIVITYTYPECREATEPRIVATEKEYTAG V1ActivityType = "ACTIVITY_TYPE_CREATE_PRIVATE_KEY_TAG"

	// V1ActivityTypeACTIVITYTYPEDELETEPRIVATEKEYTAGS captures enum value "ACTIVITY_TYPE_DELETE_PRIVATE_KEY_TAGS"
	V1ActivityTypeACTIVITYTYPEDELETEPRIVATEKEYTAGS V1ActivityType = "ACTIVITY_TYPE_DELETE_PRIVATE_KEY_TAGS"
)

// for schema
var v1ActivityTypeEnum []interface{}

func init() {
	var res []V1ActivityType
	if err := json.Unmarshal([]byte(`["ACTIVITY_TYPE_CREATE_API_KEYS","ACTIVITY_TYPE_CREATE_USERS","ACTIVITY_TYPE_CREATE_PRIVATE_KEYS","ACTIVITY_TYPE_SIGN_RAW_PAYLOAD","ACTIVITY_TYPE_CREATE_INVITATIONS","ACTIVITY_TYPE_ACCEPT_INVITATION","ACTIVITY_TYPE_CREATE_POLICY","ACTIVITY_TYPE_DISABLE_PRIVATE_KEY","ACTIVITY_TYPE_DELETE_USERS","ACTIVITY_TYPE_DELETE_API_KEYS","ACTIVITY_TYPE_DELETE_INVITATION","ACTIVITY_TYPE_DELETE_ORGANIZATION","ACTIVITY_TYPE_DELETE_POLICY","ACTIVITY_TYPE_CREATE_USER_TAG","ACTIVITY_TYPE_DELETE_USER_TAGS","ACTIVITY_TYPE_CREATE_ORGANIZATION","ACTIVITY_TYPE_SIGN_TRANSACTION","ACTIVITY_TYPE_APPROVE_ACTIVITY","ACTIVITY_TYPE_REJECT_ACTIVITY","ACTIVITY_TYPE_DELETE_AUTHENTICATORS","ACTIVITY_TYPE_CREATE_AUTHENTICATORS","ACTIVITY_TYPE_CREATE_PRIVATE_KEY_TAG","ACTIVITY_TYPE_DELETE_PRIVATE_KEY_TAGS"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1ActivityTypeEnum = append(v1ActivityTypeEnum, v)
	}
}

func (m V1ActivityType) validateV1ActivityTypeEnum(path, location string, value V1ActivityType) error {
	if err := validate.EnumCase(path, location, value, v1ActivityTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1 activity type
func (m V1ActivityType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1ActivityTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this v1 activity type based on context it is used
func (m V1ActivityType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
