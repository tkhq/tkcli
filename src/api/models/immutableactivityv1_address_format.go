// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Immutableactivityv1AddressFormat - ADDRESS_FORMAT_UNCOMPRESSED: 04<X_COORDINATE><Y_COORDINATE>
//   - ADDRESS_FORMAT_COMPRESSED: 02 or 03, followed by the X coordinate
//   - ADDRESS_FORMAT_ETHEREUM: Your standard Ethereum address (0x...). We apply EIP55 casing.
//   - ADDRESS_FORMAT_BITCOIN_P2PKH: Bitcoin formats. See https://en.bitcoin.it/wiki/List_of_address_prefixes
//
// swagger:model immutableactivityv1AddressFormat
type Immutableactivityv1AddressFormat string

func NewImmutableactivityv1AddressFormat(value Immutableactivityv1AddressFormat) *Immutableactivityv1AddressFormat {
	return &value
}

// Pointer returns a pointer to a freshly-allocated Immutableactivityv1AddressFormat.
func (m Immutableactivityv1AddressFormat) Pointer() *Immutableactivityv1AddressFormat {
	return &m
}

const (

	// Immutableactivityv1AddressFormatADDRESSFORMATUNCOMPRESSED captures enum value "ADDRESS_FORMAT_UNCOMPRESSED"
	Immutableactivityv1AddressFormatADDRESSFORMATUNCOMPRESSED Immutableactivityv1AddressFormat = "ADDRESS_FORMAT_UNCOMPRESSED"

	// Immutableactivityv1AddressFormatADDRESSFORMATCOMPRESSED captures enum value "ADDRESS_FORMAT_COMPRESSED"
	Immutableactivityv1AddressFormatADDRESSFORMATCOMPRESSED Immutableactivityv1AddressFormat = "ADDRESS_FORMAT_COMPRESSED"

	// Immutableactivityv1AddressFormatADDRESSFORMATETHEREUM captures enum value "ADDRESS_FORMAT_ETHEREUM"
	Immutableactivityv1AddressFormatADDRESSFORMATETHEREUM Immutableactivityv1AddressFormat = "ADDRESS_FORMAT_ETHEREUM"

	// Immutableactivityv1AddressFormatADDRESSFORMATBITCOINP2PKH captures enum value "ADDRESS_FORMAT_BITCOIN_P2PKH"
	Immutableactivityv1AddressFormatADDRESSFORMATBITCOINP2PKH Immutableactivityv1AddressFormat = "ADDRESS_FORMAT_BITCOIN_P2PKH"

	// Immutableactivityv1AddressFormatADDRESSFORMATBITCOINP2PKHTESTNET captures enum value "ADDRESS_FORMAT_BITCOIN_P2PKH_TESTNET"
	Immutableactivityv1AddressFormatADDRESSFORMATBITCOINP2PKHTESTNET Immutableactivityv1AddressFormat = "ADDRESS_FORMAT_BITCOIN_P2PKH_TESTNET"
)

// for schema
var immutableactivityv1AddressFormatEnum []interface{}

func init() {
	var res []Immutableactivityv1AddressFormat
	if err := json.Unmarshal([]byte(`["ADDRESS_FORMAT_UNCOMPRESSED","ADDRESS_FORMAT_COMPRESSED","ADDRESS_FORMAT_ETHEREUM","ADDRESS_FORMAT_BITCOIN_P2PKH","ADDRESS_FORMAT_BITCOIN_P2PKH_TESTNET"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		immutableactivityv1AddressFormatEnum = append(immutableactivityv1AddressFormatEnum, v)
	}
}

func (m Immutableactivityv1AddressFormat) validateImmutableactivityv1AddressFormatEnum(path, location string, value Immutableactivityv1AddressFormat) error {
	if err := validate.EnumCase(path, location, value, immutableactivityv1AddressFormatEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this immutableactivityv1 address format
func (m Immutableactivityv1AddressFormat) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateImmutableactivityv1AddressFormatEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this immutableactivityv1 address format based on context it is used
func (m Immutableactivityv1AddressFormat) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
