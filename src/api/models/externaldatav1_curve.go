// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Externaldatav1Curve Cryptographic Curve used to generate a given Private Key.
//
// swagger:model externaldatav1Curve
type Externaldatav1Curve string

func NewExternaldatav1Curve(value Externaldatav1Curve) *Externaldatav1Curve {
	return &value
}

// Pointer returns a pointer to a freshly-allocated Externaldatav1Curve.
func (m Externaldatav1Curve) Pointer() *Externaldatav1Curve {
	return &m
}

const (

	// Externaldatav1CurveCURVESECP256K1 captures enum value "CURVE_SECP256K1"
	Externaldatav1CurveCURVESECP256K1 Externaldatav1Curve = "CURVE_SECP256K1"
)

// for schema
var externaldatav1CurveEnum []interface{}

func init() {
	var res []Externaldatav1Curve
	if err := json.Unmarshal([]byte(`["CURVE_SECP256K1"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		externaldatav1CurveEnum = append(externaldatav1CurveEnum, v)
	}
}

func (m Externaldatav1Curve) validateExternaldatav1CurveEnum(path, location string, value Externaldatav1Curve) error {
	if err := validate.EnumCase(path, location, value, externaldatav1CurveEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this externaldatav1 curve
func (m Externaldatav1Curve) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateExternaldatav1CurveEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this externaldatav1 curve based on context it is used
func (m Externaldatav1Curve) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
