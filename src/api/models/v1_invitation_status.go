// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1InvitationStatus v1 invitation status
//
// swagger:model v1InvitationStatus
type V1InvitationStatus string

func NewV1InvitationStatus(value V1InvitationStatus) *V1InvitationStatus {
	return &value
}

// Pointer returns a pointer to a freshly-allocated V1InvitationStatus.
func (m V1InvitationStatus) Pointer() *V1InvitationStatus {
	return &m
}

const (

	// V1InvitationStatusINVITATIONSTATUSCREATED captures enum value "INVITATION_STATUS_CREATED"
	V1InvitationStatusINVITATIONSTATUSCREATED V1InvitationStatus = "INVITATION_STATUS_CREATED"

	// V1InvitationStatusINVITATIONSTATUSACCEPTED captures enum value "INVITATION_STATUS_ACCEPTED"
	V1InvitationStatusINVITATIONSTATUSACCEPTED V1InvitationStatus = "INVITATION_STATUS_ACCEPTED"

	// V1InvitationStatusINVITATIONSTATUSREVOKED captures enum value "INVITATION_STATUS_REVOKED"
	V1InvitationStatusINVITATIONSTATUSREVOKED V1InvitationStatus = "INVITATION_STATUS_REVOKED"
)

// for schema
var v1InvitationStatusEnum []interface{}

func init() {
	var res []V1InvitationStatus
	if err := json.Unmarshal([]byte(`["INVITATION_STATUS_CREATED","INVITATION_STATUS_ACCEPTED","INVITATION_STATUS_REVOKED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1InvitationStatusEnum = append(v1InvitationStatusEnum, v)
	}
}

func (m V1InvitationStatus) validateV1InvitationStatusEnum(path, location string, value V1InvitationStatus) error {
	if err := validate.EnumCase(path, location, value, v1InvitationStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1 invitation status
func (m V1InvitationStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1InvitationStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this v1 invitation status based on context it is used
func (m V1InvitationStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
