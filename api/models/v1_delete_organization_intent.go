// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1DeleteOrganizationIntent v1 delete organization intent
//
// swagger:model v1DeleteOrganizationIntent
type V1DeleteOrganizationIntent struct {

	// @inject_tag: validate:"required,uuid"
	//
	// Unique identifier for a given Organization.
	// Required: true
	OrganizationID *string `json:"organizationId"`
}

// Validate validates this v1 delete organization intent
func (m *V1DeleteOrganizationIntent) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOrganizationID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1DeleteOrganizationIntent) validateOrganizationID(formats strfmt.Registry) error {

	if err := validate.Required("organizationId", "body", m.OrganizationID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this v1 delete organization intent based on context it is used
func (m *V1DeleteOrganizationIntent) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1DeleteOrganizationIntent) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1DeleteOrganizationIntent) UnmarshalBinary(b []byte) error {
	var res V1DeleteOrganizationIntent
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
